

using MauiApp1.Exam.Model;
using System;
using MauiApp1.viewmodel;

namespace MauiApp1;

public partial class MainPage : ContentPage
{

    public MainPage()
    {

        InitializeComponent();


    }


    private decimal firstNumber;
    private string operatorName;
    private bool isoperatorClicked;
    viewModel _viewModel = new viewModel();
    private void btn_common_Clicked(object sender, EventArgs e)
    {
        var button = sender as Button;
        if (display.Text == "0")
        {
            display.Text = button.Text;
        }
        else
        {
            display.Text += button.Text;
        }
    }

    private void del_Clicked(object sender, EventArgs e)
    {
        display.Text = "0";
    }

    private void backspace_Clicked(object sender, EventArgs e)
    {
        string inputs = display.Text;
        if (inputs != "0")
        {
            inputs = inputs.Remove(inputs.Length - 1, 1);
            if (inputs.Length == 0)
            {
                display.Text = "0";
            }
            else
            {
                display.Text = inputs;
            }
        }
    }

    private void Btn_operations(object sender, EventArgs e)
    {
        var button = sender as Button;
        isoperatorClicked = true;
        operatorName = button.Text;
        firstNumber = Convert.ToDecimal(display.Text);
        display.Text = "";

    }

    private void percentage_Clicked(object sender, EventArgs e)
    {
        string number = display.Text;
        decimal convNumber = Convert.ToDecimal(number);
        if (convNumber != 0)
        {
            decimal result = convNumber / 100;
            display.Text = result.ToString();
        }
    }

    private  async void Btn_equal_Clicked(object sender, EventArgs e)
    {
        decimal SecondNumber = Convert.ToDecimal(display.Text);
        string finalResult = calculate(firstNumber, SecondNumber).ToString("0.##");
        display.Text = finalResult;

        
        





    }
  
    public decimal calculate(decimal first_number, decimal second_number)
    {

        decimal result = 0;
        if (operatorName == "+")
        {

            result = first_number + second_number;
            _viewModel.AddResult($"{first_number}+ {second_number} ={result}");
            
           


            


        }
        else if (operatorName == "-")
        {
            result = first_number - second_number;
            _viewModel.AddResult($"{first_number}- {second_number} ={result}");


        }
        else if (operatorName == "ร")
        {
            result = first_number * second_number;
            _viewModel.AddResult($"{first_number}* {second_number} ={result}");


        }
        else if (operatorName == "รท")
        {
            result = first_number / second_number;
            _viewModel.AddResult($"{first_number}รท {second_number} ={result}");

        }
        else if (operatorName == "Mod")
        {
            result = first_number % second_number;
            _viewModel.AddResult($"{first_number} mod {second_number} ={result}");

        }

        return result;
    }

    private void Square_root_Clicked(object sender, EventArgs e)
    {
        
        string number = display.Text;
        double convNumber = Convert.ToDouble(number);
        convNumber = Math.Sqrt(convNumber);
        _viewModel.AddResult($" Sqrt  {number} ={convNumber}");
        display.Text = convNumber.ToString();
    }
}




